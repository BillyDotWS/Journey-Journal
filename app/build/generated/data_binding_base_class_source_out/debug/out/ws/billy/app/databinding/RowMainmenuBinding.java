// Generated by view binder compiler. Do not edit!
package ws.billy.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ws.billy.app.R;

public final class RowMainmenuBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout buttonMenu;

  @NonNull
  public final TextView menuNotificationCount;

  @NonNull
  public final TextView menuText;

  private RowMainmenuBinding(@NonNull RelativeLayout rootView, @NonNull RelativeLayout buttonMenu,
      @NonNull TextView menuNotificationCount, @NonNull TextView menuText) {
    this.rootView = rootView;
    this.buttonMenu = buttonMenu;
    this.menuNotificationCount = menuNotificationCount;
    this.menuText = menuText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowMainmenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowMainmenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_mainmenu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowMainmenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      RelativeLayout buttonMenu = rootView.findViewById(R.id.buttonMenu);
      if (buttonMenu == null) {
        missingId = "buttonMenu";
        break missingId;
      }
      TextView menuNotificationCount = rootView.findViewById(R.id.menuNotificationCount);
      if (menuNotificationCount == null) {
        missingId = "menuNotificationCount";
        break missingId;
      }
      TextView menuText = rootView.findViewById(R.id.menuText);
      if (menuText == null) {
        missingId = "menuText";
        break missingId;
      }
      return new RowMainmenuBinding((RelativeLayout) rootView, buttonMenu, menuNotificationCount,
          menuText);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
