// Generated by view binder compiler. Do not edit!
package ws.billy.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ws.billy.app.R;

public final class SplashlayoutBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final Button btnSignIn;

  @NonNull
  public final Button btnSignUp;

  @NonNull
  public final LinearLayout buttonContainer;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final NavigationView navView;

  @NonNull
  public final Toolbar toolbar;

  private SplashlayoutBinding(@NonNull DrawerLayout rootView, @NonNull Button btnSignIn,
      @NonNull Button btnSignUp, @NonNull LinearLayout buttonContainer,
      @NonNull DrawerLayout drawerLayout, @NonNull NavigationView navView,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.btnSignIn = btnSignIn;
    this.btnSignUp = btnSignUp;
    this.buttonContainer = buttonContainer;
    this.drawerLayout = drawerLayout;
    this.navView = navView;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SplashlayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SplashlayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.splashlayout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SplashlayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      Button btnSignIn = rootView.findViewById(R.id.btnSignIn);
      if (btnSignIn == null) {
        missingId = "btnSignIn";
        break missingId;
      }
      Button btnSignUp = rootView.findViewById(R.id.btnSignUp);
      if (btnSignUp == null) {
        missingId = "btnSignUp";
        break missingId;
      }
      LinearLayout buttonContainer = rootView.findViewById(R.id.buttonContainer);
      if (buttonContainer == null) {
        missingId = "buttonContainer";
        break missingId;
      }
      DrawerLayout drawerLayout = rootView.findViewById(R.id.drawer_layout);
      if (drawerLayout == null) {
        missingId = "drawerLayout";
        break missingId;
      }
      NavigationView navView = rootView.findViewById(R.id.nav_view);
      if (navView == null) {
        missingId = "navView";
        break missingId;
      }
      Toolbar toolbar = rootView.findViewById(R.id.toolbar);
      if (toolbar == null) {
        missingId = "toolbar";
        break missingId;
      }
      return new SplashlayoutBinding((DrawerLayout) rootView, btnSignIn, btnSignUp, buttonContainer,
          drawerLayout, navView, toolbar);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
